add_debugger_test(debugger_sanity debugger/debugger_sanity.s
                  ${CMAKE_SOURCE_DIR}/tests/debugger/sanity.input
                  --driver_arg=--repl)

test_add(basic_mem         basic/mem.py)
test_add(basic_soc         basic/soc.py)
test_add(store_byte_issue  basic/store_byte_issue.py)

test_add(asm_timer asm/timer.s)
test_add(asm_uart  asm/uart.s)
test_add(asm_sb    asm/sb.s)
test_add(asm_lb    asm/lb.s)

test_add(asm_csrr_vendorid      asm/csrr_vendor.s)
test_add(asm_csrw_vendorid      asm/csrw_vendor.s)
test_add(asm_csre_missing_csr   asm/csrr_missing.s)
test_add(asm_csrrw_small   asm/csrrw_compliance.s)
test_add(asm_csrrs_small   asm/csrrs_compliance.s)

test_add(c_basic             c/basic)

test_add(c_libc_exit_S       c/libc/exit_succ)
test_add(c_libc_exit_F       c/libc/exit_fail --driver_arg=--expect-failure)
test_add(c_libc_main_ret_S   c/libc/main_ret_succ)
test_add(c_libc_main_ret_F   c/libc/main_ret_fail --driver_arg=--expect-failure)
test_add(c_libc_printf4      c/libc/printf4)
test_add(c_libc_printf5      c/libc/printf5)
test_add(c_libc_printf_int   c/libc/printf_int)

test_add(c_isr_route_timer_base   c/libc/isr_route_timer_base)

set(COMPLIANCE_SOURCES_ROOT ${CMAKE_SOURCE_DIR}/tests/compliance/rv32i/src)
file(GLOB COMPLIANCE_TESTS "${COMPLIANCE_SOURCES_ROOT}/*.S")
foreach(file ${COMPLIANCE_TESTS})
    get_filename_component(NAME "${file}" NAME)
    test_add(compliance_${NAME}  compliance/rv32i/src/${NAME})
endforeach()
