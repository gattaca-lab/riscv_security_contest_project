include <%= ENV['TOOLS_DISTRIB'] %>/share/testsMakefile.include

CC         = $(RISCV_GCC_CC)
LD         = $(RISCV_GCC_LD)
NM         = $(RISCV_GCC_NM)
OBJCOPY    = $(RISCV_GCC_OBJCOPY)

LDFLAGS    = $(RISCV_LDFLAGS_COMMON)
LDSCRIPT   = $(RISCV_COMPLIANCE_LD_SCRIPT)

CFLAGS     = $(RISCV_CFLAGS_COMMON) -I$(RISCV_COMPLIANCE_INCLUDES)
CFLAGS    += -march=$(MARCH_COMPLIANCE_TESTS) -mabi=ilp32
<% if asm_c_ext %>
CFLAGS    += -march=rv32imc
<% end %>
# uncomment the line below if you wan to disable IO facilities of compliance tests
# CFLAGS     += -DDISABLE_COMPLIANCE_IO

LDFLAGS    = ${RISCV_LDFLAGS_COMMON} -I$(RISCV_ASM_INCLUDES)
LDFLAGS   += -march=$(MARCH_COMPLIANCE_TESTS) -mabi=ilp32
<% if asm_c_ext %>
LDFLAGS    += -march=rv32imc
<% end %>

SRC  = <%= input_asm %>

.PHONY : all

all: test.elf test.v tcl_copy

clean:
	rm asm_pre.s
	rm test.elf
	rm test.v

tcl_copy: $(TESTBENCH_TOOLS_SRC)/trace/filter_init.tcl
	cp $(TESTBENCH_TOOLS_SRC)/trace/filter_init.tcl filter_init.tcl

# clang/llvm can't build compliance tests
test.elf: asm_pre.s
	$(CC) -Xlinker -T$(LDSCRIPT) $(LDFLAGS) asm_pre.s -o test.elf

asm_pre.s: $(SRC)
	$(CC) -E $(CFLAGS) $(SRC) -o asm_pre.s

test.v: test.elf
	$(OBJCOPY) --target verilog test.elf test.v
