include <%= ENV['TOOLS_DISTRIB'] %>/share/testsMakefile.include

CC         = $(RISCV_CC)
LD         = $(RISCV_LD)
OBJCOPY    = $(RISCV_OBJCOPY)
LDFLAGS    = $(RISCV_LDFLAGS_COMMON)
LDSCRIPT   = $(RISCV_ASM_LD_SCRIPT)

# YES, we support M instructions in assembly tests
CFLAGS     = $(RISCV_CFLAGS_COMMON) -I$(RISCV_ASM_INCLUDES)
CFLAGS    += -march=$(MARCH_ASM_TESTS) -mabi=ilp32
CFLAGS    += -DENABLE_FPGA_EXIT
<% if asm_c_ext %>
CFLAGS    += -march=rv32imc
<% end %>

LDFLAGS    = ${RISCV_LDFLAGS_COMMON} -I$(RISCV_ASM_INCLUDES)
LDFLAGS   += -march=$(MARCH_ASM_TESTS) -mabi=ilp32

SRC  = <%= input_asm %>

.PHONY : all

all: test.elf test.v tcl_copy fpga.info

clean:
	rm asm_pre.s
	rm test.elf
	rm test.v
	rm fpga.info


tcl_copy: $(TESTBENCH_TOOLS_SRC)/trace/filter_init.tcl
	cp $(TESTBENCH_TOOLS_SRC)/trace/filter_init.tcl filter_init.tcl

fpga.info: test.elf
	NM_TOOL=$(RISCV_NM) $(PYTHON_INTERPRETER) \
	-uB $(TESTBENCH_TOOLS_SRC)/misc/fpga_info.py test.elf fpga.info >/dev/null

test.elf: asm_pre.s
	$(LD) -Xlinker -T$(RISCV_ASM_LD_SCRIPT) \
	-Xlinker --defsym=__SOC_MEM_SIZE=$(SOC_RAM_SIZE) \
	$(LDFLAGS) asm_pre.s -o test.elf

asm_pre.s: $(SRC) $(RISCV_ASM_INCLUDES)/boot.S $(RISCV_ASM_INCLUDES)/defines.S
	$(CC) -x c -E $(CFLAGS) $(SRC) -o asm_pre.s

test.v: test.elf
	$(OBJCOPY) --target verilog test.elf test.v
