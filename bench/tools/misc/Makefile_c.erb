include <%= ENV['TOOLS_DISTRIB'] %>/share/testsMakefile.include

CC         = $(RISCV_LLVM_CC)
LD         = $(RISCV_GCC_LD)
NM         = $(RISCV_GCC_NM)
OBJCOPY    = $(RISCV_GCC_OBJCOPY)

LIBGCC_PATH = $(RISCV_LIBGCC_PATH)

# TODO: move this crap (selection) to runner
<% if enable_stack_tagging %>
LIBC_PATH   = $(RISCV_PSEUDOLIBC_MTE_PATH)
LIBC_INCLUDES = $(RISCV_PSEUDOLIBC_MTE_INCLUDES)
<% elsif disable_security %>
LIBC_PATH   = $(RISCV_PSEUDOLIBC_NS_PATH)
LIBC_INCLUDES = $(RISCV_PSEUDOLIBC_NS_INCLUDES)
<% else %>
LIBC_PATH   = $(RISCV_PSEUDOLIBC_MT_PATH)
LIBC_INCLUDES = $(RISCV_PSEUDOLIBC_MT_INCLUDES)
<% end %>

LDFLAGS    = $(RISCV_LDFLAGS_COMMON)
LDSCRIPT   = $(RISCV_C_LD_SCRIPT)

CFLAGS     = $(RISCV_CFLAGS_COMMON) <%= disable_warnings ? "-w" : "" %>
LDFLAGS    = ${RISCV_LDFLAGS_COMMON} <%= disable_warnings ? "-w" : "" %>

<% if asm_c_ext %>
C_TEST_MARCH = rv32imc
<% else %>
C_TEST_MARCH = $(MARCH_C_TESTS)
<% end %>

<% if enable_stack_tagging %>
CFLAGS    += -mabi=ilp32 --target=riscv32 -march=$(C_TEST_MARCH)xbeehive -fsanitize=memtag
LDFLAGS   += -mabi=ilp32 -march=$(C_TEST_MARCH)xbeehive
<% else %>
CFLAGS    += -mabi=ilp32 -march=$(C_TEST_MARCH)
LDFLAGS   += -mabi=ilp32 -march=$(C_TEST_MARCH)
<% end %>

SRC  = <%= input_c %>
DIRECTORY = <%= c_root %>
.PHONY : all

all: test.elf test.v tcl_copy

clean:
	rm test.elf
	rm test.v

tcl_copy: $(TESTBENCH_TOOLS_SRC)/trace/filter_init.tcl
	cp $(TESTBENCH_TOOLS_SRC)/trace/filter_init.tcl filter_init.tcl

test.elf:  command_line.s $(SRC) $(LIBC_PATH)/libc.a
	$(CC) $(CFLAGS) $(SRC) command_line.s \
	-I$(DIRECTORY) -I$(LIBC_INCLUDES) \
	-static -L$(LIBC_PATH) -lm -lc $(LIBGCC_PATH) \
        -LinkerBin $(LD) \
	-Xlinker --defsym=__SOC_MEM_SIZE=$(SOC_RAM_SIZE) \
	-Xlinker -T$(LDSCRIPT) -o test.elf

test.v: test.elf
	$(OBJCOPY) --target verilog test.elf test.v
